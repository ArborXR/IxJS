{"version":3,"sources":["asynciterable/operators/mergeall.ts"],"names":[],"mappings":";;;AAAA,8BAA2B;AAC3B,uCAAoC;AAEpC;;;;;GAKG;AACH,SAAgB,QAAQ,CAAC,UAAU,GAAG,QAAQ;IAC5C,OAAO,SAAS,wBAAwB,CAAU,MAA6C;QAC7F,OAAO,IAAA,OAAE,EAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,IAAA,iBAAO,EAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC;IAC3D,CAAC,CAAC;AACJ,CAAC;AAJD,4BAIC","file":"mergeall.js","sourcesContent":["import { as } from '../as';\nimport { flatMap } from './flatmap';\n\n/**\n * Merges elements from all inner async-iterable sequences into a single async-iterable sequence.\n *\n * @template TSource The type of the elements in the source sequences.\n * @returns {OperatorAsyncFunction<AsyncIterable<TSource>, TSource>} The async-iterable sequence that merges the elements of the inner sequences.\n */\nexport function mergeAll(concurrent = Infinity) {\n  return function mergeAllOperatorFunction<TSource>(source: AsyncIterable<AsyncIterable<TSource>>) {\n    return as(source)['pipe'](flatMap((s) => s, concurrent));\n  };\n}\n"]}